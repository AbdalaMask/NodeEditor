<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:m="clr-namespace:NodeEditor.Model;assembly=NodeEditorAvalonia.Model"
             xmlns:vm="using:NodeEditorDemo.ViewModels"
             xmlns:editor="clr-namespace:NodeEditor.Controls;assembly=NodeEditorAvalonia"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:idd="clr-namespace:Avalonia.Xaml.Interactions.DragAndDrop;assembly=Avalonia.Xaml.Interactions"
             xmlns:behaviors="clr-namespace:NodeEditor.Behaviors;assembly=NodeEditorAvalonia"
             xmlns:controls="clr-namespace:NodeEditorDemo.Controls;assembly=NodeEditorBase"
             xmlns:paz="clr-namespace:Avalonia.Controls.PanAndZoom;assembly=Avalonia.Controls.PanAndZoom"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="clr-namespace:NodeEditorDemo.Views"
             mc:Ignorable="d" d:DesignWidth="1120" d:DesignHeight="650"
             x:Class="NodeEditorDemo.Views.MainView"
             x:CompileBindings="True" x:DataType="vm:MainWindowViewModel"
             ClipToBounds="False"
             Background="{DynamicResource MainBackground}"
             editor:DrawingNode.IsEditMode="{Binding IsEditMode}">
 <Design.DataContext>
    <vm:MainWindowViewModel />
  </Design.DataContext>
  <UserControl.KeyBindings>
    <KeyBinding Command="{Binding ToggleEditModeCommand}" Gesture="Ctrl+E"  />
    <KeyBinding Command="{Binding NewCommand}" Gesture="Ctrl+N"  />
    <KeyBinding Command="{Binding OpenCommand}" Gesture="Ctrl+O"  />
    <KeyBinding Command="{Binding SaveCommand}" Gesture="Ctrl+S"  />
    <KeyBinding Command="{Binding Drawing.CutCommand, FallbackValue={x:Null}}" Gesture="Ctrl+X"  />
    <KeyBinding Command="{Binding Drawing.CopyCommand, FallbackValue={x:Null}}" Gesture="Ctrl+C"  />
    <KeyBinding Command="{Binding Drawing.PasteCommand, FallbackValue={x:Null}}" Gesture="Ctrl+V"  />
    <KeyBinding Command="{Binding Drawing.DuplicateCommand, FallbackValue={x:Null}}" Gesture="Ctrl+D"  />
    <KeyBinding Command="{Binding Drawing.DeleteCommand, FallbackValue={x:Null}}" Gesture="Delete"  />
    <KeyBinding Command="{Binding Drawing.SelectAllCommand, FallbackValue={x:Null}}" Gesture="Ctrl+A"  />
    <KeyBinding Command="{Binding Drawing.DeselectAllCommand, FallbackValue={x:Null}}" Gesture="Escape"  />
  </UserControl.KeyBindings>
  <UserControl.Styles>
    <Style Selector="MenuItem /template/ ContentPresenter#PART_IconPresenter">
      <Setter Property="Width" Value="20" />
      <Setter Property="Height" Value="20" />
    </Style>
  </UserControl.Styles>
  <DockPanel>
    <views:MenuView ZoomControl="{Binding #ZoomBorder}"
                    x:CompileBindings="False"
                    DockPanel.Dock="Top" />
    <Separator Height="0.55" 
               Opacity="0.3" 
               HorizontalAlignment="Stretch"
               Background="{DynamicResource PanelBackground}"
               DockPanel.Dock="Top" />
    <Grid ColumnDefinitions="200,6,*">
      <DockPanel Background="{DynamicResource MainBackground}" Grid.Column="0">
        <Separator Width="0.55" 
                   Opacity="0.3" 
                   VerticalAlignment="Stretch"
                   Background="{DynamicResource PanelBackground}"
                   DockPanel.Dock="Right" />
        <DockPanel>
          <Grid ColumnDefinitions="Auto,50*,Auto,50*" DockPanel.Dock="Bottom">
            <Label Grid.Column="0" 
                   Content="W"
                   Margin="6,0,6,0"
                   VerticalAlignment="Center"
                   Opacity="0.6"/>
            <TextBox Grid.Column="1" 
                     BorderBrush="Transparent"
                     Margin="4,4,2,4"
                     Padding="6"
                     TextAlignment="Center"
                     Text="{Binding Drawing.Width, FallbackValue=''}" />
            <Label Grid.Column="2" 
                  Content="H"
                   Margin="6,0,6,0"
                   VerticalAlignment="Center"
                   Opacity="0.6"/>
            <TextBox Grid.Column="3" 
                     BorderBrush="Transparent"
                     Margin="2,4,4,4"
                     Padding="6"
                     TextAlignment="Center"
                     Text="{Binding Drawing.Height, FallbackValue=''}" />
          </Grid>
          <Separator Height="0.55" 
                     Opacity="0.3" 
                     HorizontalAlignment="Stretch"
                     Background="{DynamicResource PanelBackground}"
                     DockPanel.Dock="Bottom"/>
          <DockPanel DockPanel.Dock="Bottom">
            <ToggleSwitch IsChecked="{Binding IsEditMode}"
                          OnContent="Edit Mode On"
                          OffContent="Edit Mode Off"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Margin="4,4,4,0"/>
          </DockPanel>
          <Separator Height="0.55" 
                     Opacity="0.3" 
                     HorizontalAlignment="Stretch"
                     Background="{DynamicResource PanelBackground}"
                     DockPanel.Dock="Bottom" />
          <Panel Background="{DynamicResource MainBackground}"
                 DockPanel.Dock="Top">
            <Label Content="Toolbox"
                   Margin="12,6,12,6"/>
          </Panel>
          <Separator Height="0.55" 
                     Opacity="0.3" 
                     HorizontalAlignment="Stretch"
                     Background="{DynamicResource PanelBackground}"
                     DockPanel.Dock="Top" />
          <ListBox Items="{Binding Templates}"
                   Background="{DynamicResource MainBackground}">
            <ListBox.Resources>
              <behaviors:TemplatesListBoxDropHandler x:Key="TemplatesListBoxDropHandler" />
            </ListBox.Resources>
            <i:Interaction.Behaviors>
              <idd:ContextDropBehavior Handler="{StaticResource TemplatesListBoxDropHandler}" />
            </i:Interaction.Behaviors>
            <ListBox.Styles>
              <Style Selector="ListBox > ListBoxItem">
                <Setter Property="(i:Interaction.Behaviors)">
                  <i:BehaviorCollectionTemplate>
                    <i:BehaviorCollection>
                      <idd:ContextDragBehavior />
                    </i:BehaviorCollection>
                  </i:BehaviorCollectionTemplate>
                </Setter>
              </Style>
            </ListBox.Styles>
            <ListBox.ItemTemplate>
              <DataTemplate DataType="m:INodeTemplate">
                <DockPanel>
                  <Viewbox DockPanel.Dock="Left" Width="32" Height="32">
                    <editor:Node DataContext="{Binding Preview}" IsHitTestVisible="False">
                      <editor:Node.Styles>
                        <Style Selector="editor|Node /template/ ItemsControl#PART_PinsItemsControl">
                          <Setter Property="IsVisible" Value="False" />
                        </Style>
                      </editor:Node.Styles>
                    </editor:Node>
                  </Viewbox>
                  <Panel Margin="12,6,12,6">
                    <TextBlock Text="{Binding Title}" 
                               VerticalAlignment="Center" />
                  </Panel>
                </DockPanel>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </DockPanel>
      </DockPanel>
      <GridSplitter ResizeDirection="Columns" 
                    ResizeBehavior="PreviousAndNext" 
                    Width="6" 
                    Background="Transparent" 
                    Grid.Column="1"/>
      <Panel Grid.Column="2">
        <Panel Background="{DynamicResource EditorBackground}" />
        <Panel Background="{DynamicResource EditorCheckerBoard}" />
        <ScrollViewer VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto"
                      DataContext="{Binding Drawing}">
          <controls:NodeZoomBorder Name="ZoomBorder"
                                   Stretch="None"
                                   ZoomSpeed="1.2"
                                   EnableConstrains="False"
                                   Background="Transparent" 
                                   ClipToBounds="True" 
                                   Focusable="True"
                                   VerticalAlignment="Stretch" 
                                   HorizontalAlignment="Stretch">
            <i:Interaction.Behaviors>
              <idd:ContextDropBehavior Context="{Binding FallbackValue={x:Null}}">
                <idd:ContextDropBehavior.Handler>
                  <behaviors:DrawingDropHandler RelativeTo="{Binding #Drawing}" />
                </idd:ContextDropBehavior.Handler>
              </idd:ContextDropBehavior>
            </i:Interaction.Behaviors>
            <editor:DrawingNode Name="Drawing"
                                Background="White">
              <editor:DrawingNode.Transitions>
                <Transitions>
                  <paz:TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
                </Transitions>
              </editor:DrawingNode.Transitions>
              <editor:DrawingNode.ContextFlyout>
                <MenuFlyout>
                  <MenuItem Header="_Edit" 
                            InputGesture="Ctrl+E"
                            DataContext="{Binding $parent[UserControl].DataContext}"
                            Command="{Binding ToggleEditModeCommand}" 
                            x:DataType="vm:MainWindowViewModel">
                    <MenuItem.Icon>
                      <CheckBox BorderThickness="0" 
                                IsHitTestVisible="False" 
                                IsChecked="{Binding IsEditMode, Mode=TwoWay}"/>
                    </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem Header="-" />
                  <MenuItem Header="Cu_t" Command="{Binding CutCommand}" InputGesture="Ctrl+X" />
                  <MenuItem Header="_Copy" Command="{Binding CopyCommand}" InputGesture="Ctrl+C" />
                  <MenuItem Header="_Paste" Command="{Binding PasteCommand}" InputGesture="Ctrl+V" />
                  <MenuItem Header="D_uplicate" Command="{Binding DuplicateCommand}" InputGesture="Ctrl+D" />
                  <MenuItem Header="-" />
                  <MenuItem Header="Select _All" Command="{Binding SelectAllCommand, FallbackValue={x:Null}}" InputGesture="Ctrl+A" />
                  <MenuItem Header="De_select All" Command="{Binding DeselectAllCommand, FallbackValue={x:Null}}" InputGesture="Escape" />
                  <MenuItem Header="-" />
                  <MenuItem Header="_Delete" Command="{Binding DeleteCommand}" InputGesture="Delete" />
                </MenuFlyout>
              </editor:DrawingNode.ContextFlyout>
            </editor:DrawingNode>
          </controls:NodeZoomBorder>
        </ScrollViewer>
      </Panel>
    </Grid>
  </DockPanel>
</UserControl>
