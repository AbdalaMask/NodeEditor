<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:NodeEditorDemo.ViewModels"
             xmlns:controls="clr-namespace:NodeEditorDemo.Controls;assembly=NodeEditor.Base"
             xmlns:views="clr-namespace:NodeEditorDemo.Views"
             xmlns:nodeEditorDemo="clr-namespace:NodeEditorDemo"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="NodeEditorDemo.Views.MenuView"
             x:CompileBindings="True" x:DataType="vm:MainWindowViewModel">
    <Menu>
      <MenuItem Header="_File">
        <MenuItem Header="_New" 
                  Command="{Binding NewCommand}" 
                  InputGesture="Ctrl+N" />
        <Separator IsVisible="{x:Static nodeEditorDemo:App.EnableInputOutput}"/>
        <MenuItem Header="_Open..."
                  Command="{Binding OpenCommand}" 
                  InputGesture="Ctrl+O" 
                  IsVisible="{x:Static nodeEditorDemo:App.EnableInputOutput}" />
        <Separator IsVisible="{x:Static nodeEditorDemo:App.EnableInputOutput}" />
        <MenuItem Header="_Save..." 
                  Command="{Binding SaveCommand}" 
                  InputGesture="Ctrl+S"
                  IsVisible="{x:Static nodeEditorDemo:App.EnableInputOutput}" />
        <Separator IsVisible="{x:Static nodeEditorDemo:App.EnableInputOutput}"/>
        <MenuItem Header="Export..." 
                  Command="{Binding ExportCommand}"
                  IsVisible="{x:Static nodeEditorDemo:App.EnableInputOutput}" />
        <Separator IsVisible="{x:Static nodeEditorDemo:App.EnableInputOutput}"/>
        <MenuItem Header="E_xit" 
                  Command="{Binding ExitCommand}" 
                  IsVisible="{x:Static nodeEditorDemo:App.EnableInputOutput}"/>
      </MenuItem>
      <MenuItem Header="_Edit">
        <MenuItem Header="Cu_t" 
                  Command="{Binding Drawing.CutCommand, FallbackValue={x:Null}}" 
                  InputGesture="Ctrl+X" />
        <MenuItem Header="_Copy" 
                  Command="{Binding Drawing.CopyCommand, FallbackValue={x:Null}}" 
                  InputGesture="Ctrl+C" />
        <MenuItem Header="_Paste" 
                  Command="{Binding Drawing.PasteCommand, FallbackValue={x:Null}}"
                  InputGesture="Ctrl+V" />
        <MenuItem Header="D_uplicate" 
                  Command="{Binding Drawing.DuplicateCommand, FallbackValue={x:Null}}" 
                  InputGesture="Ctrl+D" />
        <Separator />
        <MenuItem Header="Select _All" 
                  Command="{Binding Drawing.SelectAllCommand, FallbackValue={x:Null}}" 
                  InputGesture="Ctrl+A" />
        <MenuItem Header="De_select All" 
                  Command="{Binding Drawing.DeselectAllCommand, FallbackValue={x:Null}}" 
                  InputGesture="Escape" />
        <Separator />
        <MenuItem Header="_Delete" 
                  Command="{Binding Drawing.DeleteCommand, FallbackValue={x:Null}}" 
                  InputGesture="Delete" />
      </MenuItem>
      <MenuItem Header="_View">
        <MenuItem Header="_Menu" 
                  InputGesture="Alt+D1"
                  DataContext="{Binding $parent[UserControl].DataContext}"
                  Command="{Binding ToggleIsMenuViewVisibleCommand}" 
                  x:DataType="vm:MainWindowViewModel">
          <MenuItem.Icon>
            <CheckBox BorderThickness="0" 
                      IsHitTestVisible="False" 
                      IsChecked="{Binding IsMenuViewVisible, Mode=TwoWay}"/>
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="_Toolbox" 
                  InputGesture="Alt+D2"
                  DataContext="{Binding $parent[UserControl].DataContext}"
                  Command="{Binding ToggleIsToolboxViewVisibleCommand}" 
                  x:DataType="vm:MainWindowViewModel">
          <MenuItem.Icon>
            <CheckBox BorderThickness="0" 
                      IsHitTestVisible="False" 
                      IsChecked="{Binding IsToolboxViewVisible, Mode=TwoWay}"/>
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="_Settings" 
                  InputGesture="Alt+D3"
                  DataContext="{Binding $parent[UserControl].DataContext}"
                  Command="{Binding ToggleIsSettingsViewVisibleCommand}" 
                  x:DataType="vm:MainWindowViewModel">
          <MenuItem.Icon>
            <CheckBox BorderThickness="0" 
                      IsHitTestVisible="False" 
                      IsChecked="{Binding IsSettingsViewVisible, Mode=TwoWay}"/>
          </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="Show/Hide _UI" 
                  InputGesture="Alt+D0"
                  Command="{Binding ShowHideUICommand, FallbackValue={x:Null}}"/>
      </MenuItem>
      <MenuItem Header="_Zoom" 
                DataContext="{Binding $parent[views:MenuView].ZoomControl}"
                x:DataType="controls:NodeZoomBorder" 
                x:CompileBindings="False">
        <MenuItem Header="_50%" 
                  Command="{Binding ZoomToCommand, FallbackValue={x:Null}}"
                  CommandParameter="0.5" />
        <MenuItem Header="_100%" 
                  Command="{Binding ResetZoomCommand, FallbackValue={x:Null}}"
                  InputGesture="Ctrl+D0" />
        <MenuItem Header="_200%" 
                  Command="{Binding ZoomToCommand, FallbackValue={x:Null}}"
                  CommandParameter="2" />
        <Separator />
        <MenuItem Header="Zoom _In" 
                  Command="{Binding ZoomInCommand, FallbackValue={x:Null}}"
                  InputGesture="Add"/>
        <MenuItem Header="Zoom _Out" 
                  Command="{Binding ZoomOutCommand, FallbackValue={x:Null}}"
                  InputGesture="Subtract" />
        <Separator />
        <MenuItem Header="Fit Canvas" 
                  Command="{Binding FitCanvasCommand, FallbackValue={x:Null}}"
                  InputGesture="Ctrl+D1" />
        <MenuItem Header="Fit to Fill" 
                  Command="{Binding FitToFillCommand, FallbackValue={x:Null}}"
                  InputGesture="Ctrl+D2" />
        <MenuItem Header="Fill Canvas" 
                  Command="{Binding FillCanvasCommand, FallbackValue={x:Null}}"
                  InputGesture="Ctrl+D3" />
      </MenuItem>
    </Menu>
</UserControl>

