<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="using:NodeEditor.ViewModels"
             xmlns:m="clr-namespace:NodeEditor.Model"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:behaviors="clr-namespace:NodeEditor.Behaviors"
             xmlns:converters="clr-namespace:NodeEditor.Converters"
             xmlns:controls="clr-namespace:NodeEditor.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="NodeEditor.Views.DrawingNodeView"
             x:CompileBindings="True" x:DataType="vm:DrawingNodeViewModel"
             Width="{Binding Width}"
             Height="{Binding Height}"
             ClipToBounds="False">
  <UserControl.Styles>
    <Style Selector=":is(ItemsControl).dragNode > :is(ContentPresenter)">
      <Setter Property="(i:Interaction.Behaviors)">
        <i:BehaviorCollectionTemplate>
          <i:BehaviorCollection>
            <behaviors:NodeDragBehavior />
          </i:BehaviorCollection>
        </i:BehaviorCollectionTemplate>
      </Setter>
    </Style>
    <Style Selector=":is(ItemsControl).pointerEvents">
      <Setter Property="(i:Interaction.Behaviors)">
        <i:BehaviorCollectionTemplate>
          <i:BehaviorCollection>
            <behaviors:DrawingMovedBehavior />
            <behaviors:DrawingPressedBehavior />
          </i:BehaviorCollection>
        </i:BehaviorCollectionTemplate>
      </Setter>
    </Style>
    <Style Selector=":is(ItemsControl).pinPressed > :is(ContentPresenter)">
      <Setter Property="(i:Interaction.Behaviors)">
        <i:BehaviorCollectionTemplate>
          <i:BehaviorCollection>
            <behaviors:PinPressedBehavior />
          </i:BehaviorCollection>
        </i:BehaviorCollectionTemplate>
      </Setter>
    </Style>
    <Style Selector="controls|Connector">
      <Setter Property="Stroke" Value="Red" />
      <Setter Property="StrokeThickness" Value="2" />
      <Setter Property="Offset" Value="50" />
    </Style>
    <Style Selector="Rectangle#PART_Pin">
      <Setter Property="Fill" Value="Black" />
    </Style>
    <Style Selector="Rectangle#PART_Pin:pointerover">
      <Setter Property="Fill" Value="Red" />
    </Style>
  </UserControl.Styles>
  <Panel>
    <ItemsControl Items="{Binding Nodes}" 
                  Width="{Binding Width}" 
                  Height="{Binding Height}"
                  Background="Transparent"
                  ClipToBounds="False"
                  Classes="dragNode pointerEvents">
      <ItemsControl.Styles>
        <Style Selector="ItemsControl > ContentPresenter" x:DataType="vm:NodeViewModel">
          <Setter Property="Canvas.Left" Value="{Binding X}" />
          <Setter Property="Canvas.Top" Value="{Binding Y}" />
        </Style>
      </ItemsControl.Styles>
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <Canvas />
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <ItemsControl.ItemTemplate>
        <DataTemplate DataType="vm:NodeViewModel">
          <Panel Width="{Binding Width}" 
                 Height="{Binding Height}">
            <ContentPresenter Name="PART_ContentPresenter"
                              Content="{Binding Content}" />
            <ItemsControl Items="{Binding Pins}"
                          Width="{Binding Width}"
                          Height="{Binding Height}"
                          ClipToBounds="False"
                          Classes="pinPressed">
              <ItemsControl.Styles>
                <Style Selector="ItemsControl > ContentPresenter" x:DataType="vm:PinViewModel">
                  <Setter Property="Canvas.Left" Value="{Binding X}" />
                  <Setter Property="Canvas.Top" Value="{Binding Y}" />
                </Style>
              </ItemsControl.Styles>
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <Canvas />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.DataTemplates>
                <DataTemplate DataType="vm:PinViewModel">
                  <Rectangle Name="PART_Pin"
                             Margin="{Binding Converter={x:Static converters:PinMarginConverter.Instance}}"
                             Width="{Binding Width}"
                             Height="{Binding Height}">
                    <Rectangle.ContextFlyout>
                      <Flyout>
                        <DockPanel>
                          <Label Content="Alignment:" DockPanel.Dock="Top" />
                          <RadioButton Content="None"
                                       GroupName="Alignment"
                                       IsChecked="{Binding Alignment, Converter={x:Static converters:EnumToCheckedConverter.Instance}, ConverterParameter={x:Static m:PinAlignment.None}}"
                                       DockPanel.Dock="Top" />
                          <RadioButton Content="Left"
                                       GroupName="Alignment"
                                       IsChecked="{Binding Alignment, Converter={x:Static converters:EnumToCheckedConverter.Instance}, ConverterParameter={x:Static m:PinAlignment.Left}}"
                                       DockPanel.Dock="Top" />
                          <RadioButton Content="Right"
                                       GroupName="Alignment"
                                       IsChecked="{Binding Alignment, Converter={x:Static converters:EnumToCheckedConverter.Instance}, ConverterParameter={x:Static m:PinAlignment.Right}}"
                                       DockPanel.Dock="Top" />
                          <RadioButton Content="Top"
                                       GroupName="Alignment"
                                       IsChecked="{Binding Alignment, Converter={x:Static converters:EnumToCheckedConverter.Instance}, ConverterParameter={x:Static m:PinAlignment.Top}}"
                                       DockPanel.Dock="Top" />
                          <RadioButton Content="Bottom"
                                       GroupName="Alignment"
                                       IsChecked="{Binding Alignment, Converter={x:Static converters:EnumToCheckedConverter.Instance}, ConverterParameter={x:Static m:PinAlignment.Bottom}}"
                                       DockPanel.Dock="Top" />
                        </DockPanel>
                      </Flyout>
                    </Rectangle.ContextFlyout>
                  </Rectangle>
                </DataTemplate>
              </ItemsControl.DataTemplates>
            </ItemsControl>
          </Panel>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>
    <ItemsControl Items="{Binding Connectors}" 
                  Width="{Binding Width}" 
                  Height="{Binding Height}"
                  Background="Transparent"
                  IsHitTestVisible="False"
                  ClipToBounds="False">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <Canvas />
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <ItemsControl.DataTemplates>
        <DataTemplate DataType="vm:ConnectorViewModel">
          <controls:Connector StartPoint="{Binding Start, Converter={x:Static converters:PinToPointConverter.Instance}}" 
                              EndPoint="{Binding End, Converter={x:Static converters:PinToPointConverter.Instance}}"/>
        </DataTemplate>
      </ItemsControl.DataTemplates>
    </ItemsControl>
  </Panel>
</UserControl>
